//Traversals
Pre Order Traversal          :-    https://leetcode.com/problems/binary-tree-preorder-traversal/
In Order Traversal           :-    https://leetcode.com/problems/binary-tree-inorder-traversal/
Post Order Traversal         :-    https://leetcode.com/problems/binary-tree-postorder-traversal/
Level Order Traversal        :-    https://leetcode.com/problems/binary-tree-level-order-traversal/
Vertical Order Traversal     :-    https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/
Zig-Zag Tree Traversal       :-    https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/
Boundary Traversal           :-    https://practice.geeksforgeeks.org/problems/boundary-traversal-of-binary-tree/1


//Views
Top View of Binary Tree      :-    https://practice.geeksforgeeks.org/problems/top-view-of-binary-tree/1
Bottom View of Binary Tree   :-    https://practice.geeksforgeeks.org/problems/bottom-view-of-binary-tree/1
Left View of Binary Tree     :-    https://practice.geeksforgeeks.org/problems/left-view-of-binary-tree/1
Right View of Binary Tree    :-    https://leetcode.com/problems/binary-tree-right-side-view/


//Operations
Symmetric Binary Tree        :-    https://leetcode.com/problems/symmetric-tree/
Maximum Depth of BT          :-    https://leetcode.com/problems/maximum-depth-of-binary-tree/
Maximum Diameter of BT       :-    https://leetcode.com/problems/diameter-of-binary-tree/
Maximum Path sum of BT       :-    https://leetcode.com/problems/binary-tree-maximum-path-sum/
Balance BT                   :-    https://leetcode.com/problems/balanced-binary-tree/
Check Two Tree Identical     :-    https://leetcode.com/problems/same-tree/
Print Root To Node Path      :-    N/A
Lowest Common Ancestor       :-    https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/
Flatten a BT                 :-    https://leetcode.com/problems/flatten-binary-tree-to-linked-list/                                                                                                      (recursive, stack(r,l), morris) 

//BST
Validate Binary Search Tree  :-    https://leetcode.com/problems/validate-binary-search-tree/
Insert into a BST            :-    https://leetcode.com/problems/insert-into-a-binary-search-tree/
Kth Smallest Element in BST  :-    https://leetcode.com/problems/kth-smallest-element-in-a-bst/
Construct BST from Preorder  :-    https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal/
Two Sum in BST               :-    https://leetcode.com/problems/two-sum-iv-input-is-a-bst
                    
