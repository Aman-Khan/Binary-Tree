vector<int> preOrder(Node* root){  //Pre Order
	vector<int> res;
	stack<Node*> st;
	st.push(root);
	while(!st.empty()){
		root=st.top();
		st.pop();
		res.push_back(root->data);
		if(root->right!=NULL){
			st.push(root->right);
		}
		if(root->left!=NULL){
			st.push(root->left);	
		}
	}
	return res;
}


vector<int> inOrder(Node* root){  //In Order
	vector<int> res;
	stack<Node*> st;
	Node* temp=root;
	while(true){
		if(temp!=NULL){
			st.push(temp);
			temp=temp->left;
		}
		else{
			if(st.empty()==true) break;
			temp=st.top();
			st.pop();
			res.push_back(temp->data);
			temp=temp->right;
		}
	}	
    return res;
}


vector<int> postOrder(Node* root){  //Post Order
	vector<int> res;
	stack<int> st2;
	stack<Node*> st;
	st.push(root);
	while(!st.empty()){
		root=st.top();
		st.pop();
		st2.push(root->data);
		if(root->left!=NULL){
			st.push(root->left);
		}
		if(root->right!=NULL){
			st.push(root->right);
		}
	}
	while(st2.size()>0){
		res.push_back(st2.top());
		st2.pop();
	}
	return res;
}

